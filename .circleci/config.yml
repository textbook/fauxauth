version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.3.0

node: &node
  docker:
    - image: cimg/node:16.15.0-browsers

all_builds: &all_builds
  filters:
    tags:
      only: /v\d+(\.\d+)*/

release_only: &release_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /v\d+(\.\d+)*/

e2e: &e2e
  steps:
    - browser-tools/install-chrome
    - browser-tools/install-chromedriver
    - checkout
    - attach_workspace:
        at: .
    - restore_cache:
        keys:
          - fauxauth-npm-{{ checksum "package-lock.json" }}
    - run:
        name: NPM 8
        command: |
          if [[ "$(npm -v | cut -d. -f1)" != "8" ]];
          then npm install --global npm@8;
          fi
    - run:
        name: Info
        command: 'echo "Node: $(node -v)" && echo "NPM: v$(npm -v)"'
    - run:
        name: Install Fauxauth
        command: npm ci
    - run:
        name: Install Chromedriver
        command: npm run install:chromedriver
    - run:
        name: Test
        command: npm run e2e
        environment:
          DEBUG: fauxauth:*
    - store_test_results:
        path: ./packages/e2e/reports

jobs:
  dependencies:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - fauxauth-npm-{{ checksum "package-lock.json" }}
            - fauxauth-npm-
      - run:
          name: Info
          command: 'echo "Node: $(node -v)" && echo "NPM: v$(npm -v)"'
      - run:
          name: Check Node
          command: |
            if [[ "$(node -v)" == "v$(cat .nvmrc)" ]];
            then echo 'Node version OK';
            else echo 'Node version mismatch' && exit 1;
            fi
      - run:
          name: Install
          command: npm ci
      - save_cache:
          key: fauxauth-npm-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  lint:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - fauxauth-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Install
          command: npm ci
      - run:
          name: Lint
          command: npm run lint

  test:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - fauxauth-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Install
          command: npm ci
      - run:
          name: Install CodeClimate Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
          working_directory: packages/fauxauth
      - run:
          name: Test
          command: npm --workspace packages/fauxauth run test:cover
      - run:
          name: Use CodeClimate Reporter
          command: ./cc-test-reporter after-build
          working_directory: packages/fauxauth
      - store_test_results:
          path: ./packages/fauxauth/reports

  build:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - fauxauth-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Install
          command: npm ci
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - ./packages/fauxauth/lib

  e2e:
    <<: *node
    <<: *e2e

  e2e-gallium:
    <<: *e2e
    docker:
      - image: cimg/node:16.15-browsers

  e2e-fermium:
    <<: *e2e
    docker:
      - image: cimg/node:14.19-browsers

  deploy-docker:
    <<: *node
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.12
      - attach_workspace:
          at: .
      - run:
          name: Deploy to Docker Hub
          command: ./deploy-docker.sh
          working_directory: bin

  deploy-npm:
    <<: *node
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Deploy to NPM
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > "$HOME/.npmrc"
            npm --workspace packages/fauxauth publish

  smoke-test:
    <<: *node
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.12
      - restore_cache:
          keys:
            - fauxauth-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Smoke Test
          command: './smoke-test.sh "$CIRCLE_TAG"'
          working_directory: bin
          environment:
            CHROMEDRIVER: 'false'

workflows:
  version: 2
  build_and_test:
    jobs:
      - dependencies:
          <<: *all_builds
      - lint:
          <<: *all_builds
          requires:
            - dependencies
      - test:
          <<: *all_builds
          requires:
            - dependencies
      - build:
          <<: *all_builds
          requires:
            - dependencies
      - e2e:
          <<: *all_builds
          requires:
            - build
      - e2e-gallium:
          <<: *all_builds
          requires:
            - lint
            - test
            - e2e
      - e2e-fermium:
          <<: *all_builds
          requires:
            - lint
            - test
            - e2e
      - deploy-docker:
          <<: *release_only
          requires:
            - e2e-fermium
            - e2e-gallium
      - deploy-npm:
          <<: *release_only
          requires:
            - e2e-fermium
            - e2e-gallium
      - smoke-test:
          <<: *release_only
          requires:
            - deploy-docker
            - deploy-npm
